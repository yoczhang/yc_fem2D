% function PolyMshr_PlotMsh(g)
function plotPolyMsh(g)
%
%  Plot the polygen mesh.
%
%
%   We let Nnodes denote the number of nodes of the mesh Th,
%               Nedges denote the number of the EDGEs of Th,
%               Nelems denote the number of the elements of Th.
%
%
%   input:
%       g, the cell-type mesh, generated by polyMeshAuxStructure.m
%           or the structure-type mesh.
%
%
%	YcZhang 9/7/2017
%
%   Last modified 11/7/2017
%

%> following is the structure-type mesh
Nelem = g.Nelems;
node = g.node;
elem = g.elem;
elem2edge = g.elem2edge;
baryEdge = g.baryEdge;

% % %> following is the cell-type mesh
% % varName = g{1};
% % Nelem = g{varName.Nelems};
% % node = g{varName.node};
% % elem = g{varName.elem};
% % elem2edge = g{varName.elem2edge};
% % baryEdge = g{varName.baryEdge};

figure('Color', [1, 1, 1]); % white background
reset(cla), reset(clf), hold on
% hold('on'),  axis('off')
daspect([1, 1, 1]) % adjust aspect ration, requires Octave >= 3.8
textarray = @(x1,x2,s) arrayfun(@(a,b,c) text(a,b,int2str(c),'Color','blue'), x1, x2, s);

for ii = 1: Nelem
    singleElem = elem{ii}; % get the ii-th elem from the cell-type structure: elem.
    singleNE = length(singleElem); % get the number of edges(nodes) on singleElem.
    
    nodeOFsingleElem = node(singleElem,:);
    Nnode = size(nodeOFsingleElem,1);
    
    %% Plot the triangle.
    Elem = 1:singleNE;
    trisurf(Elem, nodeOFsingleElem(:,1), nodeOFsingleElem(:,2), ...
        zeros(Nnode,1), 'facecolor', 'none');
    
    %% Global vertex numbers.
    textarray(nodeOFsingleElem(:,1), nodeOFsingleElem(:,2), singleElem');
    
    %% Global edge numbers.
    Elem2GlobalEdgeIndx = elem2edge{ii}; % [1 x singleNE]
    ElembaryEdge = baryEdge(Elem2GlobalEdgeIndx, :);
    textarray(ElembaryEdge(:,1), ElembaryEdge(:,2), Elem2GlobalEdgeIndx');
    
    %% Triangle numbers.
    baryX = sum( node(singleElem,1) )/singleNE; % get the barycenter of singleElem
    baryY = sum( node(singleElem,2) )/singleNE;
    textarray(baryX, baryY, ii);
end % for ii

xx = node(:,1);
yy = node(:,2);
axis equal
axis([min(xx)-0.1 max(xx)+0.1 min(yy)-0.1 max(yy)+0.1])

end % function
